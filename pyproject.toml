[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pudb"
version = "2025.1.2"
description = "A full-screen, console-based Python debugger"
readme = "README.rst"
license = "MIT"
requires-python = "~=3.8"
authors = [
    { name = "Andreas Kloeckner", email = "inform@tiker.net" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Environment :: Console :: Curses",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development",
    "Topic :: Software Development :: Debuggers",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: System :: Recovery Tools",
    "Topic :: System :: Software Distribution",
    "Topic :: Terminals",
    "Topic :: Utilities",
]
dependencies = [
    "jedi>=0.18,<1",
    "packaging>=20.0",
    "pygments>=2.7.4",
    "urwid>=2.4",

    # https://github.com/urwid/urwid/issues/1017
    "urwid; python_version >= '3.9'",
    "urwid!=3.0.0; python_version < '3.9'",

    "urwid_readline",

    "typing_extensions >= 4.13",
]

[project.optional-dependencies]
completion = [
    "shtab",
]

[project.scripts]
pudb = "pudb.run:main"

[tool.hatch.build.targets.sdist]
exclude = [
    "/.github",
    "/.gitlab-ci.yml",
    "/.mailmap",
    "*~",
    "/.basedpyright",
    "/.coveragerc",
    "/.editorconfig",
]

[tool.ruff]
preview = true

[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "C",   # flake8-comprehensions
    "E",   # pycodestyle
    "F",   # pyflakes
    "I",   # flake8-isort
    "N",   # pep8-naming
    "NPY", # numpy
    "Q",   # flake8-quotes
    "W",   # pycodestyle
    "TC",
    "RUF",
    "UP",
]
extend-ignore = [
    "C90",  # McCabe complexity
    "E221", # multiple spaces before operator
    "E226", # missing whitespace around arithmetic operator
    "E241", # multiple spaces after comma
    "E242", # tab after comma
    "E402", # module level import not at the top of file
    "N818", # error suffix in exception names

    # TODO
    "UP031", # format specifiers instead of % format
]
[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"
multiline-quotes = "double"

[tool.ruff.lint.isort]
combine-as-imports = true
known-local-folder = [
    "pudb",
]
lines-after-imports = 2
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"pudb/themes/*.py" = ["I002"]
"debug_me.py" = ["I002"]
"doc/conf.py" = ["I002"]
"examples/*.py" = ["I002"]
"pudb/test/*.py" = ["I002"]
"manual-tests/*.py" = ["I002"]

[tool.pytest.ini_options]

addopts = [
        "--ignore=pudb/b.py",
        "--ignore=pudb/ipython.py",
        ]


[tool.typos.default]
extend-ignore-re = [
  "(?Rm)^.*(#|//)\\s*spellchecker:\\s*disable-line$"
]

[tool.typos.default.extend-words]
# Ned Batchelder, person
Ned = "Ned"

[tool.typos.files]
extend-exclude = [
]

[tool.basedpyright]
reportImplicitStringConcatenation = "none"
reportUnnecessaryIsInstance = "none"
reportUnusedCallResult = "none"
reportExplicitAny = "none"

# This reports even cycles that are qualified by 'if TYPE_CHECKING'. Not what
# we care about at this moment.
# https://github.com/microsoft/pyright/issues/746
reportImportCycles = "none"

ignore = [
    "doc/conf.py",
]

pythonVersion = "3.8"
pythonPlatform = "All"

[[tool.basedpyright.executionEnvironments]]
root = "examples"
reportUnknownArgumentType = "hint"
reportUnknownMemberType = "hint"
reportUnknownVariableType = "hint"
reportMissingImports = "hint"
reportMissingTypeStubs = "hint"

